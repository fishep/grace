description 'Demo project for Spring Boot'

buildscript {
    ext {
        springBootVersion = '3.0.5'
        springCloudVersion = '2022.0.2'
        springCloudAlibabaVersion = '2022.0.0.0'
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply from: 'version.gradle'

allprojects {
    group = 'com.fishep'

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = JavaVersion.VERSION_18
        targetCompatibility = JavaVersion.VERSION_18
    }

    compileJava.options.encoding "UTF-8"
    compileTestJava.options.encoding "UTF-8"

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    dependencyManagement {
        dependencies {
            for (depJar in rootProject.ext.dependencies) {
                dependency depJar.value
            }
        }
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }
}

ext {
    gatewayProjects = subprojects.findAll { it.name.endsWith("-gateway") }
    serviceProjects = subprojects.findAll { it.name.endsWith("-service") }
}

configure(gatewayProjects) { p ->
    dependencies {
        api project(":common")

        implementation 'org.springframework.boot:spring-boot-starter'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}

configure(serviceProjects) { p ->
    dependencies {
        api project(":common")

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
        implementation 'org.springframework.boot:spring-boot-starter-web'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}
